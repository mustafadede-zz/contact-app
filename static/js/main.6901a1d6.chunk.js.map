{"version":3,"sources":["components/Contacts/List/index.js","components/Contacts/Form/index.js","components/Contacts/index.js","App.js","reportWebVitals.js","index.js"],"names":["List","contacts","useState","filterText","setFilterText","filtered","filter","item","Object","keys","some","key","toString","toLowerCase","includes","className","placeholder","value","onChange","e","target","map","contact","index","fullname","phone","initialValues","Form","addContacts","form","setForm","onChangedInput","name","type","onClick","Contacts","setContacts","useEffect","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAuBeA,MArBf,YAA2B,IAAZC,EAAW,EAAXA,SACX,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAWJ,EAASK,QAAO,SAACC,GAC9B,OAAOC,OAAOC,KAAKF,GAAMG,MAAK,SAACC,GAAD,OAC1BJ,EAAKI,GAAKC,WAAWC,cAAcC,SAASX,EAAWU,qBAG/D,OACI,sBAAKE,UAAU,OAAf,UACI,uBAAOC,YAAY,iBAAiBC,MAAQd,EAAYe,SAAU,SAACC,GAAD,OAAOf,EAAce,EAAEC,OAAOH,UAChG,qBAAKF,UAAU,cAAf,SAEIV,EAASgB,KAAI,SAACC,EAAQC,GAAT,OAAmB,+BAAgB,+BAAOD,EAAQE,WAAgB,sBAAMT,UAAU,WAAhB,SAA4BO,EAAQG,UAA1EF,Y,qBCbnDG,EAAgB,CAACF,SAAS,GAAGC,MAAM,IAkC1BE,MAhCf,YAAuC,IAAxBC,EAAuB,EAAvBA,YAAY3B,EAAW,EAAXA,SACvB,EAAuBC,mBAASwB,GAAhC,mBAAOG,EAAP,KAAYC,EAAZ,KAEMC,EAAiB,SAACZ,GACpBW,EAAQ,2BAAID,GAAL,kBAAWV,EAAEC,OAAOY,KAAMb,EAAEC,OAAOH,UAU9C,OACI,gCACI,oBAAIF,UAAU,OAAd,kBAGA,8BACA,uBAAOkB,KAAK,OAAOhB,MAAOY,EAAKL,SAAUQ,KAAK,WAAWhB,YAAY,YAAYE,SAAUa,MAE3F,uBACA,8BACI,uBAAOE,KAAK,MAAMhB,MAAOY,EAAKJ,MAAOO,KAAK,QAAQhB,YAAY,eAAeE,SAAUa,MAE3F,uBACA,wBAAQhB,UAAU,YAAYmB,QApBtC,SAAkBf,GACd,GAAsB,KAAlBU,EAAKL,UAAkC,KAAfK,EAAKJ,MAC7B,OAAO,EAEXG,EAAY,GAAD,mBAAK3B,GAAL,CAAc4B,KACzBC,EAAQJ,IAeJ,qBCTGS,MAnBf,WACI,MAA+BjC,mBAAS,CACpC,CACAsB,SAAS,UACTC,MAAM,SAHV,mBAAOxB,EAAP,KAAgBmC,EAAhB,KASA,OAHAC,qBAAU,WACNC,QAAQC,IAAItC,KACd,CAACA,IAEC,sBAAKc,UAAU,aAAf,UACI,oBAAIA,UAAU,QAAd,sBACA,cAAC,EAAD,CAAMd,SAAUA,IAChB,cAAC,EAAD,CAAM2B,YAAaQ,EAAanC,SAAUA,QCJvCuC,MATf,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,cAAC,EAAD,OCKS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6901a1d6.chunk.js","sourcesContent":["import {useState} from 'react'\n\nfunction List({contacts}) {\n    const [filterText,setFilterText] = useState(\"\");\n\n    const filtered = contacts.filter((item) => {\n        return Object.keys(item).some((key) => \n            item[key].toString().toLowerCase().includes(filterText.toLowerCase()))\n    })\n    \n    return (\n        <div className=\"list\">\n            <input placeholder=\"filter contact\" value= {filterText} onChange={(e) => setFilterText(e.target.value)}/>\n            <div className=\"showcontact\">\n                {\n                filtered.map((contact,index) => <li key={index}><span>{contact.fullname}</span><span className=\"dif-span\">{contact.phone}</span></li>)\n                }\n            </div>\n            \n        </div>\n    )\n}\n\nexport default List\n","import {useState} from 'react'\n\nconst initialValues = {fullname:\"\",phone:\"\"}\n\nfunction Form({addContacts,contacts}) {\n    const [form,setForm] = useState(initialValues)\n    \n    const onChangedInput = (e) => {\n        setForm({...form,[e.target.name]:e.target.value})\n    }\n    \n    function onSubmit(e) {\n        if (form.fullname === \"\" || form.phone === \"\") {\n            return false;\n        }\n        addContacts([...contacts,form])\n        setForm(initialValues) //make form empty \n    }\n    return (\n        <div>\n            <h2 className=\"form\">\n                Form\n            </h2>\n            <div>\n            <input type=\"text\" value={form.fullname} name=\"fullname\" placeholder=\"full name\" onChange={onChangedInput} />\n            </div>\n            <br />\n            <div>\n                <input type=\"tel\" value={form.phone} name=\"phone\" placeholder=\"phone number\" onChange={onChangedInput}/>\n            </div>\n            <br />\n            <button className=\"form-ekle\" onClick={onSubmit}>Add</button>\n        </div>\n    )\n}\n\nexport default Form\n","import {useState,useEffect} from 'react'\nimport List from './List'\nimport Form from './Form'\nfunction Contacts() {\n    const [contacts,setContacts] = useState([\n        { //default value\n        fullname:\"Mustafa\",\n        phone:\"123\"\n        }\n    ])\n    useEffect(()=>{\n        console.log(contacts)\n    },[contacts])\n    return (\n        <div className=\"allcontent\">\n            <h2 className=\"title\">Contacts</h2>\n            <List contacts={contacts}/>\n            <Form addContacts={setContacts} contacts={contacts}/>\n        </div>\n    )\n}\n\nexport default Contacts\n","import './App.css';\n\nimport Contacts from './components/Contacts'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Contacts />\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}